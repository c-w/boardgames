{"version":3,"sources":["shared/utils.js","frontend/Loading.js","frontend/config.js","frontend/Lobby.js","frontend/Play.js","frontend/MatchList.js","frontend/Rules.js","frontend/Wait.js","frontend/App.js","index.js"],"names":["last","items","length","partition","predicate","result","true","false","item","push","sum","numbers","reduce","acc","number","removeAt","i","filter","_","j","getRandomInt","max","Math","floor","random","distinct","Set","range","Array","pairs","Loading","envalid","cleanEnv","process","REACT_APP_WAITING_FOR_PLAYER_REFRESH_MS","num","default","REACT_APP_SERVER_URL","url","window","location","origin","GAME_DATA_SCHEMA","required","properties","playerName","title","type","minLength","unlisted","schemaFor","game","setupDataSchema","formDataKeyFor","gameName","CreateGame","useState","error","setError","history","useHistory","onChange","useCallback","onSubmit","event","a","formData","preventDefault","localStorage","setItem","name","JSON","stringify","numPlayers","setupData","maxPlayers","client","LobbyClient","server","config","createMatch","match","matchID","playerID","joinMatch","join","playerCredentials","message","console","schema","parse","getItem","value","disabled","JoinGame","setMatch","useEffect","getMatch","then","players","find","p","id","uiSchema","Object","fromEntries","keys","key","map","className","Lobby","props","Play","board","GameClient","Client","multiplayer","SocketIO","debug","loading","to","MatchList","matches","setMatches","useInterval","listMatches","data","openMatches","some","player","Rules","rules","dangerouslySetInnerHTML","__html","Wait","credentials","isReady","isLoading","status","setStatus","copied","setCopied","every","selectContent","target","select","onCopy","joinSlug","createHref","pathname","joinURL","text","readOnly","onFocus","DefaultLayout","children","App","exact","path","params","importers","Error","importGame","Promise","all","gameModule","rulesModule","boardModule","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8784cde2.chunk.js","sourcesContent":["/**\n * @template T\n * @param {T[]} items\n * @returns {T}\n */\nexport function last(items) {\n  return items[items.length - 1];\n}\n\n/**\n * @template T\n * @callback Predicate\n * @param {T} item\n * @returns {boolean}\n */\n\n/**\n * @template T\n * @param {T[]} items\n * @param {Predicate<T>} predicate\n * @returns {{ true: T[], false: T[] }}\n */\nexport function partition(items, predicate) {\n  const result = { true: [], false: [] };\n\n  for (const item of items) {\n    result[predicate(item)].push(item);\n  }\n\n  return result;\n}\n\n/**\n * @param {number[]} numbers\n * @returns {number}\n */\nexport function sum(numbers) {\n  return numbers.reduce((acc, number) => acc + number, 0);\n}\n\n/**\n * @template T\n * @param {T[]} items\n * @param {number} i\n * @returns {T[]}\n */\nexport function removeAt(items, i) {\n  return items.filter((_, j) => j !== i);\n}\n\n/**\n * @param {number} max\n * @returns {number}\n */\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\n/**\n * @template T\n * @param {...T} items\n * @returns {T[]}\n */\nexport function distinct(...items) {\n  return [...new Set(items)];\n}\n\n/**\n * @param {number} length\n * @returns {number[]}\n */\nexport function range(length) {\n  const items = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    items[i] = i;\n  }\n\n  return items;\n}\n\n/**\n * @template T\n * @param {T[]} items\n * @returns {T[][]}\n */\nexport function pairs(items) {\n  const pairs = [];\n\n  for (let i = 0; i < items.length; i++) {\n    for (let j = i + 1; j < items.length; j++) {\n      pairs.push([items[i], items[j]]);\n    }\n  }\n\n  return pairs;\n}\n","export default function Loading() {\n  return null;\n}\n","import envalid from 'envalid';\n\nexport default envalid.cleanEnv(process.env, {\n  REACT_APP_WAITING_FOR_PLAYER_REFRESH_MS: envalid.num({ default: 2000 }),\n  REACT_APP_SERVER_URL: envalid.url({ default: window.location.origin }),\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { LobbyClient } from 'boardgame.io/client';\nimport Form from '@rjsf/core';\nimport Loading from './Loading';\nimport config from './config';\nimport { getRandomInt } from '../shared/utils';\n\n/**\n * @typedef {import('boardgame.io').Game} Game\n */\n\nconst GAME_DATA_SCHEMA = {\n  required: [\n    'playerName',\n  ],\n  properties: {\n    playerName: {\n      title: 'Enter your name',\n      type: 'string',\n      minLength: 1,\n    },\n    unlisted: {\n      title: 'Unlisted',\n      type: 'boolean',\n    },\n  },\n};\n\nfunction schemaFor(game) {\n  return {\n    type: 'object',\n    required: [\n      ...GAME_DATA_SCHEMA.required,\n      ...game.setupDataSchema.required,\n    ],\n    properties: {\n      playerName: GAME_DATA_SCHEMA.properties.playerName,\n      ...game.setupDataSchema.properties,\n      unlisted: GAME_DATA_SCHEMA.properties.unlisted,\n    },\n  };\n}\n\n/**\n * @param {string} gameName\n * @returns {string}\n */\nfunction formDataKeyFor(gameName) {\n  return `${gameName}-formData`;\n}\n\n/**\n * @param {object} props\n * @param {Game} props.game\n */\nfunction CreateGame({ game }) {\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  const onChange = useCallback(() => {\n    setError(null);\n  }, [setError]);\n\n  const onSubmit = useCallback(async ({ formData }, event) => {\n    event.preventDefault();\n    localStorage.setItem(formDataKeyFor(game.name), JSON.stringify(formData));\n\n    let { playerName, unlisted, numPlayers, ...setupData } = formData;\n    numPlayers = numPlayers || game.maxPlayers;\n\n    const client = new LobbyClient({ server: config.REACT_APP_SERVER_URL });\n\n    try {\n      const match = await client.createMatch(game.name, {\n        numPlayers,\n        setupData,\n        unlisted,\n      });\n\n      const matchID = match.matchID;\n      const playerID = getRandomInt(numPlayers);\n\n      const join = await client.joinMatch(game.name, matchID, {\n        playerID: `${playerID}`,\n        playerName,\n      });\n\n      history.push(`/wait/${matchID}/${playerID}/${join.playerCredentials}`);\n    } catch (ex) {\n      if (ex.message === 'HTTP status 400') {\n        setError('Invalid game configuration');\n      } else {\n        setError('Unexpected error');\n        console.error(ex);\n      }\n    }\n  }, [game, history]);\n\n  const schema = schemaFor(game);\n\n  const formData = JSON.parse(localStorage.getItem(formDataKeyFor(game.name)));\n\n  return (\n    // @ts-ignore\n    <Form schema={schema} onSubmit={onSubmit} onChange={onChange} formData={formData}>\n      <input\n        type=\"submit\"\n        value={error || 'Create game'}\n        disabled={error != null}\n      />\n    </Form>\n  );\n\n}\n\n/**\n * @param {object} props\n * @param {Game} props.game\n * @param {string=} props.matchID\n */\nfunction JoinGame({ game, matchID }) {\n  const [error, setError] = useState(null);\n  const [match, setMatch] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    const client = new LobbyClient({ server: config.REACT_APP_SERVER_URL });\n\n    client.getMatch(game.name, matchID).then(match => setMatch(match));\n  }, [game, matchID]);\n\n  const onSubmit = useCallback(async ({ formData }, event) => {\n    event.preventDefault();\n    localStorage.setItem(formDataKeyFor(game.name), JSON.stringify(formData));\n\n    const client = new LobbyClient({ server: config.REACT_APP_SERVER_URL });\n\n    const playerID = match.players.find(p => p.name == null)?.id;\n\n    if (playerID == null) {\n      setError('The game is already full');\n      return;\n    }\n\n    try {\n      const join = await client.joinMatch(game.name, match.matchID, {\n        playerID: `${playerID}`,\n        playerName: formData.playerName,\n      });\n\n      history.push(`/wait/${match.matchID}/${playerID}/${join.playerCredentials}`);\n    } catch (ex) {\n      if (ex.message === 'HTTP status 409') {\n        setError('The game is already full');\n      } else if (ex.message === 'HTTP status 404') {\n        setError('The game no longer exists');\n      } else {\n        setError('Unexpected error');\n        console.error(ex);\n      }\n    }\n  }, [game, match, history]);\n\n  if (match == null) {\n    return <Loading />;\n  }\n\n  const schema = schemaFor(game);\n\n  const uiSchema = Object.fromEntries(Object.keys(schema.properties).filter(key => key !== 'playerName').map(key => ([\n    key,\n    { 'ui:disabled': true },\n  ])));\n\n  const formData = {\n    ...JSON.parse(localStorage.getItem(formDataKeyFor(game.name))),\n    ...match.setupData,\n    unlisted: match.unlisted,\n    numPlayers: match.players.length,\n  };\n\n  return (\n    // @ts-ignore\n    <Form schema={schema} onSubmit={onSubmit} formData={formData} uiSchema={uiSchema} className=\"rjsf disabled\">\n      <input\n        type=\"submit\"\n        value={error || 'Join game'}\n        disabled={error != null}\n      />\n    </Form>\n  );\n}\n\n/**\n * @param {object} props\n * @param {Game} props.game\n * @param {string=} props.matchID\n */\nexport default function Lobby(props) {\n  return props.matchID == null\n    ? <CreateGame {...props} />\n    : <JoinGame {...props} />;\n}\n","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport Loading from './Loading';\nimport config from './config';\n\n/**\n * @typedef {import('boardgame.io').Game} Game\n * @typedef {import('boardgame.io/react').BoardProps} BoardProps\n * @typedef {import('react').ComponentType<BoardProps>} BoardComponent\n */\n\n/**\n * @param {object} props\n * @param {Game} props.game\n * @param {BoardComponent} props.board\n */\nexport default function Play({ game, board, ...props }) {\n  const GameClient = Client({\n    game,\n    board,\n    multiplayer: SocketIO({ server: config.REACT_APP_SERVER_URL }),\n    debug: false,\n    loading: Loading,\n  });\n\n  return (\n    <GameClient {...props} />\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { LobbyClient } from 'boardgame.io/client';\nimport useInterval from '@use-hooks/interval';\nimport Loading from './Loading';\nimport config from './config';\n\n/**\n * @typedef {import('boardgame.io').Game} Game\n */\n\nfunction CreateGame() {\n  return (\n    <Link to=\"/new\" className=\"create-game\">Create a new game</Link>\n  );\n}\n\n/**\n * @param {object} props\n * @param {Game} props.game\n */\nexport default function MatchList({ game }) {\n  const [matches, setMatches] = useState(null);\n\n  useInterval(useCallback(async () => {\n    const client = new LobbyClient({ server: config.REACT_APP_SERVER_URL });\n    const data = await client.listMatches(game.name);\n    setMatches(data.matches);\n  }, [game, setMatches]), config.REACT_APP_WAITING_FOR_PLAYER_REFRESH_MS);\n\n  if (matches == null) {\n    return <Loading />;\n  }\n\n  const openMatches = matches.filter(match => match.players.some(player => player.name == null));\n\n  if (openMatches.length === 0) {\n    return (\n      <div className=\"matches\">\n        There are currently no games waiting for players. <CreateGame />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"matches\">\n      <CreateGame /> or join one of the games below:\n      <ul>\n        {openMatches.map(match => (\n          <li key={match.matchID}>\n            <Link to={`/join/${match.matchID}`}>\n              Join game by {match.players.find(player => player.name)?.name || 'unknown'}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\n/**\n * @param {object} props\n * @param {string} props.rules\n */\nexport default function Rules({ rules }) {\n  return <div className=\"rules\" dangerouslySetInnerHTML={{ __html: rules }} />;\n}\n","import React, { useCallback, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { LobbyClient } from 'boardgame.io/client';\nimport useInterval from '@use-hooks/interval';\nimport Loading from './Loading';\nimport config from './config';\nimport './Wait.scoped.scss';\n\n/**\n * @typedef {import('react').FocusEvent<HTMLTextAreaElement>} TextAreaFocusEvent\n * @typedef {import('boardgame.io').Game} Game\n */\n\n/**\n * @param {object} props\n * @param {Game} props.game\n * @param {string} props.matchID\n * @param {string} props.playerID\n * @param {string} props.credentials\n */\nexport default function Wait({ game, matchID, playerID, credentials }) {\n  const [status, setStatus] = useState({ isReady: false, isLoading: true });\n  const [copied, setCopied] = useState(false);\n  const history = useHistory();\n\n  useInterval(useCallback(async () => {\n    const client = new LobbyClient({ server: config.REACT_APP_SERVER_URL });\n\n    const data = await client.getMatch(game.name, matchID);\n\n    const isReady = data.players.every(p => p.name != null);\n\n    setStatus({ isLoading: false, isReady });\n  }, [game, matchID, setStatus]), config.REACT_APP_WAITING_FOR_PLAYER_REFRESH_MS);\n\n  const selectContent = useCallback((/** @type {TextAreaFocusEvent} */ event) => {\n    event.target.select();\n  }, []);\n\n  const onCopy = useCallback(() => {\n    setCopied(true);\n  }, [setCopied]);\n\n  if (status.isLoading) {\n    return <Loading />;\n  }\n\n  if (status.isReady) {\n    return (\n      <Redirect to={`/play/${matchID}/${playerID}/${credentials}`} />\n    );\n  }\n\n  const joinSlug = history.createHref({ pathname: `/join/${matchID}` });\n  const joinURL = `${window.location.origin}${window.location.pathname}${joinSlug}`;\n\n  return (\n    <div className=\"wait\">\n      <label>\n        Invite someone to join the game by sharing this URL:\n\n        <CopyToClipboard\n          text={joinURL}\n          onCopy={onCopy}\n        >\n          <div className=\"url\">\n            <textarea\n              readOnly\n              value={joinURL}\n              onFocus={selectContent}\n            />\n          </div>\n        </CopyToClipboard>\n        {copied && (\n          <div className=\"callout\">\n            <em>Copied to clipboard</em>\n          </div>\n        )}\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Lobby from './Lobby';\nimport Play from './Play';\nimport MatchList from './MatchList';\nimport Rules from './Rules';\nimport Wait from './Wait';\n\n/**\n * @typedef {import('boardgame.io').Game} Game\n * @typedef {import('boardgame.io/react').BoardProps} BoardProps\n * @typedef {import('react').ComponentType<BoardProps>} BoardComponent\n */\n\n/**\n * @param {object} props\n * @param {string} props.gameName\n * @param {any} props.children\n */\nfunction DefaultLayout({ gameName, children }) {\n  return (\n    <main className={gameName}>\n      {children}\n    </main>\n  );\n}\n\n/**\n * @param {object} props\n * @param {Game} props.game\n * @param {BoardComponent} props.board\n * @param {string} props.rules\n */\nexport default function App(props) {\n  const gameName = props.game.name;\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          children={() => (\n            <Redirect to=\"/join\" />\n          )}\n        />\n        <Route\n          exact\n          path=\"/new\"\n          children={() => (\n            <DefaultLayout gameName={gameName}>\n              <Lobby {...props} />\n            </DefaultLayout>\n          )}\n        />\n        <Route\n          exact\n          path=\"/rules\"\n          children={() => (\n            <DefaultLayout gameName={gameName}>\n              <Rules {...props} />\n            </DefaultLayout>\n          )}\n        />\n        <Route\n          exact\n          path=\"/join\"\n          children={() => (\n            <DefaultLayout gameName={gameName}>\n              <MatchList {...props} />\n            </DefaultLayout>\n          )}\n        />\n        <Route\n          exact\n          path=\"/join/:matchID\"\n          children={({ match }) => (\n            <DefaultLayout gameName={gameName}>\n              <Lobby {...match.params} {...props} />\n            </DefaultLayout>\n          )}\n        />\n        <Route\n          exact\n          path=\"/wait/:matchID/:playerID/:credentials\"\n          children={({ match }) => (\n            <DefaultLayout gameName={gameName}>\n              <Wait {...match.params} {...props} />\n            </DefaultLayout>\n          )}\n        />\n        <Route\n          exact\n          path=\"/play/:matchID/:playerID/:credentials\"\n          children={({ match }) => (\n            <DefaultLayout gameName={gameName}>\n              <Play {...match.params} {...props} />\n            </DefaultLayout>\n          )}\n        />\n      </Switch>\n    </HashRouter>\n  );\n}\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './frontend/App';\nimport './index.scss';\n\n/**\n * @param {string} gameName\n * @returns {Promise<any>[]}\n */\nfunction importGame(gameName) {\n  switch (gameName) {\n    case 'the-vole-in-the-valley':\n      return [\n        import('./shared/games/fitf'),\n        import('./frontend/boards/fitf/rules.md'),\n        import('./frontend/boards/fitf'),\n        import('./frontend/boards/fitf/index.scss'),\n      ];\n\n    case 'sashimi-express':\n      return [\n        import('./shared/games/sgp'),\n        import('./frontend/boards/sgp/rules.md'),\n        import('./frontend/boards/sgp'),\n        import('./frontend/boards/sgp/index.scss'),\n      ];\n\n    default:\n      throw new Error(`Unhandled game name: ${gameName}`);\n  }\n}\n\nconst importers = importGame(process.env.REACT_APP_BUILD_TARGET);\n\nPromise.all(importers).then(([\n  gameModule,\n  rulesModule,\n  boardModule,\n  _styleModule,\n]) => {\n  ReactDOM.render(\n    <StrictMode>\n      <App\n        board={boardModule.default}\n        game={gameModule.default}\n        rules={rulesModule.default}\n      />\n    </StrictMode>,\n    document.getElementById('root')\n  );\n});\n"],"sourceRoot":""}